name: PostgreSQL service example
on: push

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: maven:3.8.5-eclipse-temurin-11-alpine

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.1-alpine
        # Provide the password for postgres
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: device-inventory-db
          # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 300s
          --health-timeout 50s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/device-inventory-db?currentSchema=di_db